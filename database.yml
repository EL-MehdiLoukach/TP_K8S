apiVersion: v1
kind: Secret
metadata:
  name: mongodb-secret
data:
  password: bWVoZGlwYXNzd29yZDEyMwo=  # "hamdane2022" base64 encoded
  username: bWVoZGkK    # "hamdane" base64 encoded
---
apiVersion: v1
kind: Service
metadata:
  name: mongodb-service
spec:
  selector:
    app: mongodb
  ports:
    - port: 27017
      protocol: TCP
      targetPort: 27017
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mongodb-statefulset
spec:
  replicas: 2
  serviceName: "mongodb-service"
  selector:
    matchLabels:
      app: mongodb
  template:
    metadata:
      labels:
        app: mongodb
    spec:
      terminationGracePeriodSeconds: 10
      containers:
        - name: mongodb
          image: mongo:5.0
          ports:
            - containerPort: 27017
              name: db-port
          env:
            - name: MONGO_INITDB_ROOT_USERNAME
              valueFrom:
                secretKeyRef:
                  name: mongodb-secret
                  key: username
            - name: MONGO_INITDB_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mongodb-secret
                  key: password
          volumeMounts:
            - name: mongo-storage
              mountPath: /data/db
          readinessProbe:
            exec:
              command:
                - sh
                - -c
                - mongo --eval "db.adminCommand('ping')"
            initialDelaySeconds: 5
            periodSeconds: 10
  volumeClaimTemplates:
    - metadata:
        name: mongo-storage
      spec:
        accessModes: ["ReadWriteOnce"]
        resources:
          requests:
            storage: 1Gi
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: mongodb-init-config
data:
  init-mongo.js: |
    db.createUser({
        user: "mehdi",
        pwd: "mehdipassword123",
        roles: [{ role: "readWrite", db: "exam" }]
    })